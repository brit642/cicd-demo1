steps:

# use Buildpacks to create a container image
- name: 'gcr.io/k8s-skaffold/pack'
  dir: 'app/'
  entrypoint: 'pack' 
  args: 
    [
      'build', '--builder=gcr.io/buildpacks/builder', '${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}'
    ]

#pushing to artifact registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push',  '${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}']

# Push to Cloud Deploy _DEPLOY_PIPELINE if successful
- name: 'gcr.io/cloud-builders/gcloud'
  dir: 'build/cloud-deploy/cloudrun-deploy'
  args: 
    [
      'deploy', 'releases', 'create', 'cloud-run-release-${SHORT_SHA}',
      '--region', '${_GCP_REGION}',
      '--delivery-pipeline', '${_DEPLOY_PIPELINE}',
      '--annotations', 'commitID=${REVISION_ID}',
      '--images', 'run-image=${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}'
    ]

images:
- ${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}